
package com.amazonaws.queue.doc._2009_02_01;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 *  
 * Amazon Simple Queue Service (Amazon SQS) offers a reliable, highly scalable hosted queue for storing messages as they travel between computers. By using Amazon SQS, developers can simply move data between distributed application components performing different tasks, without losing messages or requiring each component to be always available.  Amazon SQS works by exposing Amazon's web-scale messaging infrastructure as a web service. Any computer on the Internet can add or read messages without any installed software or special firewall configurations. Components of applications using Amazon SQS can run independently, and do not need to be on the same network, developed with the same technologies, or running at the same time.
 *     
 * 
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebServiceClient(name = "QueueService", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", wsdlLocation = "http://queue.amazonaws.com/doc/2009-02-01/QueueService.wsdl")
public class QueueService
    extends Service
{

    private final static URL QUEUESERVICE_WSDL_LOCATION;
    private final static Logger logger = Logger.getLogger(com.amazonaws.queue.doc._2009_02_01.QueueService.class.getName());

    static {
        URL url = null;
        try {
            URL baseUrl;
            baseUrl = com.amazonaws.queue.doc._2009_02_01.QueueService.class.getResource(".");
            url = new URL(baseUrl, "http://queue.amazonaws.com/doc/2009-02-01/QueueService.wsdl");
        } catch (MalformedURLException e) {
            logger.warning("Failed to create URL for the wsdl Location: 'http://queue.amazonaws.com/doc/2009-02-01/QueueService.wsdl', retrying as a local file");
            logger.warning(e.getMessage());
        }
        QUEUESERVICE_WSDL_LOCATION = url;
    }

    public QueueService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public QueueService() {
        super(QUEUESERVICE_WSDL_LOCATION, new QName("http://queue.amazonaws.com/doc/2009-02-01/", "QueueService"));
    }

    /**
     * 
     * @return
     *     returns QueueServicePortType
     */
    @WebEndpoint(name = "QueueServicePort")
    public QueueServicePortType getQueueServicePort() {
        return super.getPort(new QName("http://queue.amazonaws.com/doc/2009-02-01/", "QueueServicePort"), QueueServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns QueueServicePortType
     */
    @WebEndpoint(name = "QueueServicePort")
    public QueueServicePortType getQueueServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("http://queue.amazonaws.com/doc/2009-02-01/", "QueueServicePort"), QueueServicePortType.class, features);
    }

    /**
     * 
     * @return
     *     returns QueueServicePortType
     */
    @WebEndpoint(name = "QueueServiceHttpsPort")
    public QueueServicePortType getQueueServiceHttpsPort() {
        return super.getPort(new QName("http://queue.amazonaws.com/doc/2009-02-01/", "QueueServiceHttpsPort"), QueueServicePortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns QueueServicePortType
     */
    @WebEndpoint(name = "QueueServiceHttpsPort")
    public QueueServicePortType getQueueServiceHttpsPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://queue.amazonaws.com/doc/2009-02-01/", "QueueServiceHttpsPort"), QueueServicePortType.class, features);
    }

}
