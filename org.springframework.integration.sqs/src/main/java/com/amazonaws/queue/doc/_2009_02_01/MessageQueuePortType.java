
package com.amazonaws.queue.doc._2009_02_01;

import java.math.BigInteger;
import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Holder;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.1.6 in JDK 6
 * Generated source version: 2.1
 * 
 */
@WebService(name = "MessageQueuePortType", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface MessageQueuePortType {


    /**
     *  
     * Adds the specified permission(s) to a queue for the specified principal(s). This allows for sharing access to the queue.
     *       
     * 
     * @param awsAccountId
     * @param actionName
     * @param label
     * @return
     *     returns com.amazonaws.queue.doc._2009_02_01.ResponseMetadata
     */
    @WebMethod(operationName = "AddPermission", action = "AddPermission")
    @WebResult(name = "ResponseMetadata", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
    @RequestWrapper(localName = "AddPermission", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.AddPermission")
    @ResponseWrapper(localName = "AddPermissionResponse", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.AddPermissionResponse")
    public ResponseMetadata addPermission(
        @WebParam(name = "Label", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        String label,
        @WebParam(name = "AWSAccountId", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        List<String> awsAccountId,
        @WebParam(name = "ActionName", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        List<String> actionName);

    /**
     * 
     * The ChangeMessageVisibility action extends the read lock timeout of the specified message from the specified queue to the specified value.
     *       
     * 
     * @param visibilityTimeout
     * @param attribute
     * @param receiptHandle
     * @return
     *     returns com.amazonaws.queue.doc._2009_02_01.ResponseMetadata
     */
    @WebMethod(operationName = "ChangeMessageVisibility", action = "ChangeMessageVisibility")
    @WebResult(name = "ResponseMetadata", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
    @RequestWrapper(localName = "ChangeMessageVisibility", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.ChangeMessageVisibility")
    @ResponseWrapper(localName = "ChangeMessageVisibilityResponse", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.ChangeMessageVisibilityResponse")
    public ResponseMetadata changeMessageVisibility(
        @WebParam(name = "ReceiptHandle", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        String receiptHandle,
        @WebParam(name = "VisibilityTimeout", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        BigInteger visibilityTimeout,
        @WebParam(name = "Attribute", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        List<Attribute> attribute);

    /**
     * 
     * The DeleteMessage action unconditionally removes the specified message from the specified queue. Even if the message is locked by another reader due to the visibility timeout setting, it is still deleted from the queue.
     *       
     * 
     * @param attribute
     * @param receiptHandle
     * @return
     *     returns com.amazonaws.queue.doc._2009_02_01.ResponseMetadata
     */
    @WebMethod(operationName = "DeleteMessage", action = "DeleteMessage")
    @WebResult(name = "ResponseMetadata", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
    @RequestWrapper(localName = "DeleteMessage", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.DeleteMessage")
    @ResponseWrapper(localName = "DeleteMessageResponse", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.DeleteMessageResponse")
    public ResponseMetadata deleteMessage(
        @WebParam(name = "ReceiptHandle", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        String receiptHandle,
        @WebParam(name = "Attribute", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        List<Attribute> attribute);

    /**
     *  
     * This action unconditionally deletes the queue specified by the queue URL. Use this operation WITH CARE!  The queue is deleted even if it is NOT empty.
     *       
     * 
     * @param attribute
     * @return
     *     returns com.amazonaws.queue.doc._2009_02_01.ResponseMetadata
     */
    @WebMethod(operationName = "DeleteQueue", action = "DeleteQueue")
    @WebResult(name = "ResponseMetadata", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
    @RequestWrapper(localName = "DeleteQueue", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.DeleteQueue")
    @ResponseWrapper(localName = "DeleteQueueResponse", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.DeleteQueueResponse")
    public ResponseMetadata deleteQueue(
        @WebParam(name = "Attribute", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        List<Attribute> attribute);

    /**
     *  
     * Gets one or all attributes of a queue. Queues currently have two attributes you can get: ApproximateNumberOfMessages and VisibilityTimeout.
     *       
     * 
     * @param attributeName
     * @param getQueueAttributesResult
     * @param unused
     * @param responseMetadata
     */
    @WebMethod(operationName = "GetQueueAttributes", action = "GetQueueAttributes")
    @RequestWrapper(localName = "GetQueueAttributes", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.GetQueueAttributes")
    @ResponseWrapper(localName = "GetQueueAttributesResponse", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.GetQueueAttributesResponse")
    public void getQueueAttributes(
        @WebParam(name = "AttributeName", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        List<String> attributeName,
        @WebParam(name = "Unused", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        String unused,
        @WebParam(name = "GetQueueAttributesResult", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", mode = WebParam.Mode.OUT)
        Holder<GetQueueAttributesResult> getQueueAttributesResult,
        @WebParam(name = "ResponseMetadata", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", mode = WebParam.Mode.OUT)
        Holder<ResponseMetadata> responseMetadata);

    /**
     *  
     * Removes the permission with the specified statement id from the queue. 
     *       
     * 
     * @param label
     * @return
     *     returns com.amazonaws.queue.doc._2009_02_01.ResponseMetadata
     */
    @WebMethod(operationName = "RemovePermission", action = "RemovePermission")
    @WebResult(name = "ResponseMetadata", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
    @RequestWrapper(localName = "RemovePermission", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.RemovePermission")
    @ResponseWrapper(localName = "RemovePermissionResponse", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.RemovePermissionResponse")
    public ResponseMetadata removePermission(
        @WebParam(name = "Label", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        String label);

    /**
     *  
     * Retrieves one or more messages from the specified queue.  For each message returned, the response includes the message body; MD5 digest of the message body; receipt handle, which is the identifier you must provide when deleting the message; and message ID of each message. Messages returned by this action stay in the queue until you delete them. However, once a message is returned to a ReceiveMessage request, it is not returned on subsequent ReceiveMessage requests for the duration of the VisibilityTimeout. If you do not specify a VisibilityTimeout in the request, the overall visibility timeout for the queue is used for the returned messages.
     *       
     * 
     * @param attributeName
     * @param visibilityTimeout
     * @param maxNumberOfMessages
     * @param unused
     * @param responseMetadata
     * @param receiveMessageResult
     */
    @WebMethod(operationName = "ReceiveMessage", action = "ReceiveMessage")
    @RequestWrapper(localName = "ReceiveMessage", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.ReceiveMessage")
    @ResponseWrapper(localName = "ReceiveMessageResponse", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.ReceiveMessageResponse")
    public void receiveMessage(
        @WebParam(name = "MaxNumberOfMessages", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        BigInteger maxNumberOfMessages,
        @WebParam(name = "VisibilityTimeout", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        BigInteger visibilityTimeout,
        @WebParam(name = "AttributeName", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        List<String> attributeName,
        @WebParam(name = "Unused", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        String unused,
        @WebParam(name = "ReceiveMessageResult", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", mode = WebParam.Mode.OUT)
        Holder<ReceiveMessageResult> receiveMessageResult,
        @WebParam(name = "ResponseMetadata", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", mode = WebParam.Mode.OUT)
        Holder<ResponseMetadata> responseMetadata);

    /**
     * 
     * The SendMessage action delivers a message to the specified queue.
     *       
     * 
     * @param messageBody
     * @param attribute
     * @param sendMessageResult
     * @param responseMetadata
     */
    @WebMethod(operationName = "SendMessage", action = "SendMessage")
    @RequestWrapper(localName = "SendMessage", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.SendMessage")
    @ResponseWrapper(localName = "SendMessageResponse", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.SendMessageResponse")
    public void sendMessage(
        @WebParam(name = "MessageBody", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        String messageBody,
        @WebParam(name = "Attribute", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        List<Attribute> attribute,
        @WebParam(name = "SendMessageResult", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", mode = WebParam.Mode.OUT)
        Holder<SendMessageResult> sendMessageResult,
        @WebParam(name = "ResponseMetadata", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", mode = WebParam.Mode.OUT)
        Holder<ResponseMetadata> responseMetadata);

    /**
     *  
     * Sets an attribute of a queue. Currently, you can set only the VisibilityTimeout attribute for a queue. 
     *       
     * 
     * @param attribute
     * @return
     *     returns com.amazonaws.queue.doc._2009_02_01.ResponseMetadata
     */
    @WebMethod(operationName = "SetQueueAttributes", action = "SetQueueAttributes")
    @WebResult(name = "ResponseMetadata", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
    @RequestWrapper(localName = "SetQueueAttributes", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.SetQueueAttributes")
    @ResponseWrapper(localName = "SetQueueAttributesResponse", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/", className = "com.amazonaws.queue.doc._2009_02_01.SetQueueAttributesResponse")
    public ResponseMetadata setQueueAttributes(
        @WebParam(name = "Attribute", targetNamespace = "http://queue.amazonaws.com/doc/2009-02-01/")
        List<Attribute> attribute);

}
