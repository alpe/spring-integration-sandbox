<project xmlns:ivy="antlib:org.apache.ivy.ant" name="spring-integration-sandbox" default="test">

	<property file="${basedir}/build.properties" />


	<!-- ================================= 
          Initialize              
         ================================= -->
	<target name="init">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${java.classes.dir}" />
		<mkdir dir="${test.classes.dir}" />
		<mkdir dir="${junit.reports.dir}" />
	</target>
	
	<path id="unresolved.classpath">
      <fileset dir="${unresolved.lib.dir}">
        <include name="**/*.jar"/>
      </fileset>
	</path>

	<!-- ================================= 
          Ivy resolve              
         ================================= -->
	<target name="ivy.init">
		<taskdef resource="org/apache/ivy/ant/antlib.xml" uri="antlib:org.apache.ivy.ant">
			<classpath>
				<path location="${unresolved.lib.dir}/ivy.jar" />
			</classpath>
		</taskdef>
		<ivy:settings file="${ivy.settings.file}" />
	</target>

	<target name="resolve.test" depends="ivy.init" description="Resolve dependencies with ivy">
		<ivy:cachepath resolveId="test.classpath" pathid="test.classpath" conf="test" type="jar" log="download-only" />
	</target>
	
	<target name="resolve.compile" depends="ivy.init" description="Resolve dependencies with ivy">
		<ivy:cachepath resolveId="compile.classpath" pathid="compile.classpath" conf="runtime" type="jar" log="download-only" />	
	</target>
	
	<target name="retrieve" depends="ivy.init" description="Copy all libs to lib dir" >
	<mkdir dir="lib" />
	<ivy:retrieve pattern="lib/[conf]/[artifact].[ext]" />
	</target>


	<!-- ================================= 
          Compile               
         ================================= -->
	<target name="compile" depends="init, resolve.compile">
		<javac destdir="${java.classes.dir}" debug="on" target="1.6">
			<src path="${java.src.dir}" />
			<classpath >
				<path refid="compile.classpath" />
				<path refid="unresolved.classpath" />
				<pathelement location="${build.junk.dir}" />
			</classpath>			 
		</javac>
	</target>

	<target name="test.compile" depends="init, compile, resolve.test">
		<javac destdir="${test.classes.dir}" debug="on" target="1.6">
			<src path="${test.src.dir}" />
			<classpath >
				<pathelement location="${java.classes.dir}" />
				<path refid="compile.classpath" />
				<path refid="test.classpath" />
				<path refid="unresolved.classpath" />
				<pathelement location="${build.junk.dir}" />
			</classpath>			 
		</javac>
	</target>

	<!-- ================================= 
          Clean              
         ================================= -->
	<target name="clean" description="Delete build dir">
		<delete dir="${build.dir}" />
	</target>
	<!-- ================================= 
          Run all unit tests              
         ================================= -->
	<target name="test" depends="compile, test.compile" description="Run all junit tests. ">
		<junit printsummary="yes" haltonfailure="yes">
			<classpath >
				<pathelement location="${java.classes.dir}" />
				<pathelement location="${test.classes.dir}" />
				<pathelement location="${test.src.dir}" />
				<path refid="compile.classpath" />
				<path refid="test.classpath" />
				<path refid="unresolved.classpath" />
				<pathelement location="${build.junk.dir}" />
			</classpath>

			<formatter type="plain" />

			<batchtest fork="yes" todir="${junit.reports.dir}">
				<fileset dir="${test.src.dir}">
					<include name="**/*Tests*.java" />
					<exclude name="**/AllTests.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>
	
	
</project>
